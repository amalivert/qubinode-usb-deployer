---
- name: Install required  packages
  become: yes
  yum:
    name:
      - genisoimage
      - isomd5sum
    state: present
    
- name: Create required mounting directories
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - '/mnt/iso'
  - '/mnt/iso_data'

- name: check if RHEL iso file exists
  stat: 
    path: "{{ iso_img_file }}"
  register: iso_exists

- name: mount iso file
  become: yes
  shell: >
    /usr/bin/mount 
    -t iso9660 
    -o loop
    {{iso_img_file}} /mnt/iso
  when: iso_exists   

- name: Copy iso data to iso_data directory
  become: yes
  copy:
    src: '/mnt/iso'
    dest: '/mnt/iso_data'
    mode: '0644'
  when: iso_exists

- name: deploy qubinode custom kickstart files
  become: yes
  template:
    src:  "{{ ks_file }}.j2"
    dest: "/mnt/iso_data/ks.cfg"
    mode: '0644'
  when: iso_exists

- name: get the blkid for the usb device
  become: yes
  shell: >
    /usr/sbin/blkid {{ usb_dev }} | awk ' / /{print $2}'| awk 'BEGIN { FS = "\"" } ; { print $2 }' 
  register: dev_blkid
  when: iso_exists

- name: Add ks and blkid to isolinux.cfg
  become: yes
  shell: >
    /usr/bin/sed -i '/^append/s/$/ ks=hd:UUID={{dev_blkid}}:ks.cfg' /mnt/iso_data/isolinux/isolinux.cfg
  when: iso_exists

- name: Create a new bootable ISO image
  become: yes
  shell: >
    genisoimage -U -r -v -T -J -joliet-long 
    -V "QUBINODE-{{os_major_version}}.{{os_minor_version}}" 
    -volset "QUBINODE-{{os_major_version}}.{{os_minor_version}}" 
    -A "QUBINODE-{{os_major_version}}.{{os_minor_version}}" 
    -b isolinux/isolinux.bin 
    -c isolinux/boot.cat 
    -no-emul-boot 
    -boot-load-size 4 
    -boot-info-table 
    -eltorito-alt-boot 
    -e images/efiboot.img 
    -no-emul-boot 
    -o ../QUBINODE-{{os_major_version}}.{{os_minor_version}}.iso .
  args:
    chdir: /mnt/iso_data/
  when: iso_exists

- name: Implant a md5 checksum into the ISO image
  become: yes
  shell: >
    implantisomd5 ../QUBINODE-{{os_major_version}}.{{os_minor_version}}.iso
  args:
    chdir: /mnt/iso_data/
  when: iso_exists

- name: Burn iso file to usb device
  become: yes
  shell: >
    /usr/bin/dd 
    if=/mnt/QUBINODE-{{os_major_version}}.{{os_minor_version}}.iso 
    of={{usb_device}} 
    status=progress
  when: iso_exists
