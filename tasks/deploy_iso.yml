---
- name: Install required packages
  become: yes
  yum:
    name:
      - 'genisoimage'
      - 'isomd5sum'
      - 'rsync'
    state: present
    
- name: Create required mounting directories
  become: yes
  file:
    path: /root/usb_stick
    state: directory

- name: Check if RHEL iso file exists
  stat: 
    path: "{{ iso_img_file }}"
  register: iso_exists

- debug:
    var: iso_exists

- fail:
    msg: "Whoops! { iso_img_file }} not found"
  when: iso_exists.stat.exists == False

- name: Mount iso file
  become: yes 
  shell: >
    /usr/bin/mount 
    -t iso9660 
    -o loop "{{ iso_img_file }}"
    /media/

- name: Copy iso data to iso_data directory
  become: yes
  synchronize:
    src: '/media/isolinux'
    dest: '/root/usb_stick'

- name: Change ownership of usb_stick files and directories
  become: yes
  file:
    path: /root/usb_stick
    mode: 0644
    recurse: true

- name: Deploy qubinode custom kickstart files
  become: yes
  template:
    src:  "{{ ks_file }}.j2"
    dest: "/root/usb_stick/ks.cfg"
    mode: '0644'

# - name: Get the blkid for the usb device
#   become: yes
#   shell: >
#     /usr/sbin/blkid {{ usb_device }} | awk ' / /{print $2}'| awk 'BEGIN { FS = "\"" } ; { print $2 }' 
#   register: dev_blkid

# - name: Set the label for the usb device
#   become: yes
#   shell: >
#     /usr/sbin/e2label {{ usb_device }} qubinode

# - name: Add ks and blkid to isolinux.cfg
#   become: yes
#   # shell: >
#   #   /usr/bin/sed -i '/^append/s/$/ ks=hd:UUID={{dev_blkid}}:ks.cfg' /mnt/iso_data/isolinux/isolinux.cfg
#   lineinfile:
#     dest: /mnt/iso_data/isolinux/isolinux.cfg
#     regexp: '^append initrd=initrd.img'
#     line: "append initrd=initrd.img inst.stage2=hd:UUID={{ dev_blkid.stdout }} ks=hd:UUID={{ dev_blkid.stdout }}:ks.cfg quiet"
#     state: present
#     firstmatch: yes

- name: Deploy isolinux config file
  become: yes
  template:
    src:  "isolinux.cfg.j2"
    dest: "/root/usb_stick/isolinux/isolinux.cfg"
    mode: '0644'

- name: Create qubinode iso image
  become: yes
  shell: >
    /usr/bin/mkisofs
    -allow-limited-size -o usb_stick.iso
    -b isolinux/isolinux.bin
    -c isolinux/boot.cat
    -no-emul-boot 
    -V "RHEL-{{os_major_version}}-{{os_major_version}}-0-BaseOS-x86_64"
    -boot-load-size 4
    -boot-info-table 
    -r -T -J usb_stick && isohybrid -v /root/usb_stick.iso
  args:
    chdir: /root/

- name: Burn iso file to usb device
  become: yes
  shell: >
    
- name: Copy qubinode iso file to usb device
  become: yes
  synchronize:
    src: '/root/usb_stick.iso'
    dest:  "{{ usb_device }} "

# - name: Create a new bootable ISO image
#   become: yes
#   shell: >
#     /usr/bin/genisoimage -U -r -v -T -J -joliet-long 
#     -V "QUBINODE-{{os_major_version}}.{{os_minor_version}}" 
#     -volset "QUBINODE-{{os_major_version}}.{{os_minor_version}}" 
#     -A "QUBINODE-{{os_major_version}}.{{os_minor_version}}" 
#     -b isolinux/isolinux.bin 
#     -c isolinux/boot.cat 
#     -no-emul-boot 
#     -boot-load-size 4 
#     -boot-info-table 
#     -eltorito-alt-boot 
#     -e images/efiboot.img 
#     -no-emul-boot 
#     -o /root/QUBINODE-{{os_major_version}}.{{os_minor_version}}.iso /mnt/iso_data

# - name: Apply md5 checksum on ISO image
#   become: yes
#   shell: >
#     implantisomd5 /root/QUBINODE-{{os_major_version}}.{{os_minor_version}}.iso

# - name: Burn iso file to usb device
#   become: yes
#   shell: >
#     /usr/bin/dd 
#     if=/root/QUBINODE-{{os_major_version}}.{{os_minor_version}}.iso 
#     of={{usb_device}} 
#     status=progress
#     bs=100M